/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 루트 엔드포인트
         * @description API 상태 메시지를 반환합니다.
         */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 헬스 체크
         * @description 애플리케이션 상태가 정상인지 확인합니다.
         */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/catalog/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 모델 리스트 조회
         * @description 카테고리, 제공자, 배포 타입 필터를 기반으로 AI 모델 리스트를 조회합니다. 페이지네이션이 포함됩니다.
         */
        get: operations["get_model_list_v1_catalog__get"];
        put?: never;
        /**
         * AI 모델 생성
         * @description 새로운 AI 모델을 생성합니다.
         */
        post: operations["create_model_v1_catalog__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/catalog/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 모델 검색
         * @description 검색 키워드 및 다양한 필터를 기반으로 AI 모델을 검색합니다.
         */
        get: operations["search_models_v1_catalog_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/catalog/{model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 AI 모델 조회
         * @description ID를 이용하여 특정 AI 모델을 조회합니다.
         */
        get: operations["get_model_v1_catalog__model_id__get"];
        /**
         * AI 모델 수정
         * @description 기존 AI 모델 정보를 수정합니다.
         */
        put: operations["update_model_v1_catalog__model_id__put"];
        post?: never;
        /**
         * AI 모델 삭제
         * @description 특정 AI 모델을 삭제합니다.
         */
        delete: operations["delete_model_v1_catalog__model_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/comment/models/{model_id}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 모델의 댓글 조회
         * @description 특정 모델에 대한 댓글을 조회합니다. 페이지네이션이 포함됩니다.
         */
        get: operations["get_comments_v1_comment_models__model_id__comments_get"];
        put?: never;
        /**
         * 특정 모델에 댓글 작성
         * @description 특정 모델에 대한 평가 댓글을 작성합니다.
         */
        post: operations["create_comment_v1_comment_models__model_id__comments_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/comment/comments/{comment_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 모델에 대한 평가댓글 삭제
         * @description 특정 모델에 평가한 특정 댓글을 삭제합니다.
         */
        delete: operations["delete_comment_v1_comment_comments__comment_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * LLM 모델 설정 목록 조회
         * @description LLM 모델의 설정 정보를 조회합니다. user_id 파라미터가 제공되면 특정 사용자의 설정만 반환합니다.
         */
        get: operations["get_llm_configs_v1_settings_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/{model_id}/all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 모델의 모든 LLM 설정 조회
         * @description 특정 모델에 대한 사용자의 모든 설정 정보를 조회합니다.
         */
        get: operations["get_all_llm_configs_for_model_v1_settings__model_id__all_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/{model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * LLM 설정 업데이트
         * @description 기존 LLM 모델 설정을 업데이트합니다. user_model_id가 제공되면 특정 설정을, 없으면 첫 번째 설정을 업데이트합니다.
         */
        put: operations["update_llm_config_v1_settings__model_id__put"];
        /**
         * 새로운 LLM 설정 생성
         * @description 새로운 LLM 모델 설정을 생성합니다.
         */
        post: operations["create_llm_config_v1_settings__model_id__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/config/{user_model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 설정 조회
         * @description user_model_id로 특정 설정을 조회합니다.
         */
        get: operations["get_config_by_id_v1_settings_config__user_model_id__get"];
        /**
         * 특정 설정 업데이트
         * @description user_model_id로 특정 설정을 업데이트합니다.
         */
        put: operations["update_config_by_id_v1_settings_config__user_model_id__put"];
        post?: never;
        /**
         * 특정 설정 삭제
         * @description user_model_id로 특정 설정을 삭제(비활성화)합니다.
         */
        delete: operations["delete_config_by_id_v1_settings_config__user_model_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/{user_model_id}/start": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * LLM 모델 시작
         * @description 모델을 시작하고 컨테이너를 구동합니다.
         */
        post: operations["start_model_v1_settings__user_model_id__start_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/{user_model_id}/stop": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * LLM 모델 중지
         * @description 모델 컨테이너를 중지합니다.
         */
        post: operations["stop_model_v1_settings__user_model_id__stop_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/status/{user_model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 모델 상태 조회
         * @description 모델의 현재 실행 상태를 조회합니다.
         */
        get: operations["get_model_status_v1_settings_status__user_model_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 실행 중인 모델 목록
         * @description 현재 실행 중인 모델 목록을 조회합니다.
         */
        get: operations["list_running_models_v1_settings_list_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/user/{user_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 사용자의 모든 LLM 모델 설정 조회
         * @description 특정 사용자의 모든 LLM 모델 설정을 직접 조회합니다.
         */
        get: operations["get_user_configs_direct_v1_settings_user__user_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/settings/config/secure/{user_model_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 설정 조회 (마스킹)
         * @description user_model_id로 특정 설정을 조회합니다. API 키 등 민감한 정보는 마스킹 처리됩니다.
         */
        get: operations["get_config_by_id_secure_v1_settings_config_secure__user_model_id__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/current/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Current User
         * @description 현재 로그인한 사용자 정보 반환
         */
        get: operations["get_current_user_v1_current_user_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/current/permissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * API 권한 목록 조회
         * @description 모든 API 권한 목록을 조회합니다.
         */
        get: operations["get_permissions_v1_current_permissions_get"];
        put?: never;
        /**
         * API 권한 생성
         * @description 새로운 API 권한을 생성합니다.
         */
        post: operations["create_permission_v1_current_permissions_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/current/permissions/{permission_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 API 권한 조회
         * @description ID를 이용하여 특정 API 권한을 조회합니다.
         */
        get: operations["get_permission_v1_current_permissions__permission_id__get"];
        /**
         * API 권한 수정
         * @description 기존 API 권한 정보를 수정합니다.
         */
        put: operations["update_permission_v1_current_permissions__permission_id__put"];
        post?: never;
        /**
         * API 권한 삭제
         * @description 특정 API 권한을 삭제합니다.
         */
        delete: operations["delete_permission_v1_current_permissions__permission_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AICategoryEnum
         * @enum {string}
         */
        AICategoryEnum: "TEXT" | "IMAGE" | "MULTIMODAL" | "EMBEDDING" | "AUDIO" | "VIDEO" | "CHAT" | "COMPLETION" | "IMAGE_GENERATION" | "AUDIO_TRANSCRIPTION" | "AUDIO_SPEECH";
        /**
         * ActionType
         * @enum {string}
         */
        ActionType: "READ" | "WRITE" | "EXECUTE";
        /**
         * ApiPermissionCreateDTO
         * @description API 권한 생성 DTO
         */
        ApiPermissionCreateDTO: {
            /**
             * Path
             * @description API 경로
             */
            path: string;
            /**
             * Resource Type
             * @description 리소스 타입
             */
            resource_type: string;
            /**
             * Http Method
             * @description HTTP 메서드
             */
            http_method: string;
            /** @description 액션 타입 */
            action_type: components["schemas"]["ActionType"];
            /**
             * Required Role
             * @description 필요한 역할
             */
            required_role?: string | null;
        };
        /**
         * ApiPermissionListResponseDTO
         * @description API 권한 목록 응답 DTO
         */
        ApiPermissionListResponseDTO: {
            /**
             * Permissions
             * @description 권한 목록
             */
            permissions: components["schemas"]["ApiPermissionResponseDTO"][];
            /**
             * Total
             * @description 전체 권한 수
             */
            total: number;
        };
        /**
         * ApiPermissionResponseDTO
         * @description API 권한 응답 DTO
         */
        ApiPermissionResponseDTO: {
            /**
             * Path
             * @description API 경로
             */
            path: string;
            /**
             * Resource Type
             * @description 리소스 타입
             */
            resource_type: string;
            /**
             * Http Method
             * @description HTTP 메서드
             */
            http_method: string;
            /** @description 액션 타입 */
            action_type: components["schemas"]["ActionType"];
            /**
             * Required Role
             * @description 필요한 역할
             */
            required_role?: string | null;
            /**
             * Id
             * @description 권한 ID
             */
            id: number;
        };
        /**
         * ApiPermissionUpdateDTO
         * @description API 권한 수정 DTO
         */
        ApiPermissionUpdateDTO: {
            /**
             * Resource Type
             * @description 리소스 타입
             */
            resource_type?: string | null;
            /**
             * Required Role
             * @description 필요한 역할
             */
            required_role?: string | null;
            /** @description 액션 타입 */
            action_type?: components["schemas"]["ActionType"] | null;
        };
        /** CommentCreateDTO */
        CommentCreateDTO: {
            /**
             * Feedback
             * @description 댓글 내용
             */
            feedback: string;
            /**
             * Created By
             * @description 댓글 작성자
             */
            created_by: string;
        };
        /** CommentResponseDTO */
        CommentResponseDTO: {
            /**
             * Feedback
             * @description 댓글 내용
             */
            feedback: string;
            /**
             * Created By
             * @description 댓글 작성자
             */
            created_by: string;
            /**
             * Id
             * @description 댓글 ID
             */
            id: number;
            /**
             * Model Id
             * @description 모델 ID
             */
            model_id: number;
            /**
             * Created At
             * Format: date-time
             * @description 댓글 작성일
             */
            created_at: string;
        };
        /**
         * DeploymentType
         * @description LLM 모델 배포 타입
         * @enum {string}
         */
        DeploymentType: "public_api" | "private_vllm";
        /** GenAICreateDTO */
        GenAICreateDTO: {
            /**
             * Model Name
             * @description 모델 이름
             */
            model_name: string;
            /**
             * Provider
             * @description 모델 제공자
             */
            provider: string;
            /**
             * Description
             * @description 모델 설명
             */
            description?: string | null;
            /**
             * Logo
             * @description 모델 로고 URL
             * @default
             */
            logo: string | null;
            /**
             * Endpoints Url
             * @description 모델 연동 API URL
             */
            endpoints_url?: string | null;
            /** @description 모델 카테고리 */
            category: components["schemas"]["AICategoryEnum"];
            /**
             * Version
             * @description 모델 버전
             */
            version: string;
            /**
             * @description 모델 상태
             * @default STABLE
             */
            status: components["schemas"]["ModelStatusEnum"];
            /**
             * Max Tokens
             * @description 최대 토큰 수
             */
            max_tokens?: number | null;
            /**
             * Max Input Tokens
             * @description 최대 입력 토큰 수
             */
            max_input_tokens?: number | null;
            /**
             * Max Output Tokens
             * @description 최대 출력 토큰 수
             */
            max_output_tokens?: number | null;
            /**
             * Input Cost Per Token
             * @description 입력 토큰당 비용
             */
            input_cost_per_token?: number | null;
            /**
             * Output Cost Per Token
             * @description 출력 토큰당 비용
             */
            output_cost_per_token?: number | null;
        } & {
            [key: string]: unknown;
        };
        /** GenAIResponseDTO */
        GenAIResponseDTO: {
            /**
             * Model Name
             * @description 모델 이름
             */
            model_name: string;
            /**
             * Provider
             * @description 모델 제공자
             */
            provider: string;
            /**
             * Description
             * @description 모델 설명
             */
            description?: string | null;
            /**
             * Logo
             * @description 모델 로고 URL
             * @default
             */
            logo: string | null;
            /**
             * Endpoints Url
             * @description 모델 연동 API URL
             */
            endpoints_url?: string | null;
            /**
             * Id
             * @description 모델 ID
             */
            id: number;
            /** @description 모델 카테고리 */
            category: components["schemas"]["AICategoryEnum"];
            /**
             * Version
             * @description 모델 버전
             */
            version: string;
            /** @description 모델 상태 */
            status: components["schemas"]["ModelStatusEnum"];
            /**
             * Max Tokens
             * @description 최대 토큰 수
             */
            max_tokens?: number | null;
            /**
             * Max Input Tokens
             * @description 최대 입력 토큰 수
             */
            max_input_tokens?: number | null;
            /**
             * Max Output Tokens
             * @description 최대 출력 토큰 수
             */
            max_output_tokens?: number | null;
            /**
             * Input Cost Per Token
             * @description 입력 토큰당 비용
             */
            input_cost_per_token?: number | null;
            /**
             * Output Cost Per Token
             * @description 출력 토큰당 비용
             */
            output_cost_per_token?: number | null;
            /**
             * Created At
             * @description 생성 날짜
             */
            created_at?: string | null;
            /**
             * Updated At
             * @description 수정 날짜
             */
            updated_at?: string | null;
        } & {
            [key: string]: unknown;
        };
        /** GenAIUpdateDTO */
        GenAIUpdateDTO: {
            /**
             * Model Name
             * @description 모델 이름
             */
            model_name: string;
            /**
             * Provider
             * @description 모델 제공자
             */
            provider: string;
            /**
             * Description
             * @description 모델 설명
             */
            description?: string | null;
            /**
             * Logo
             * @description 모델 로고 URL
             * @default
             */
            logo: string | null;
            /**
             * Endpoints Url
             * @description 모델 연동 API URL
             */
            endpoints_url?: string | null;
            /** @description 모델 카테고리 */
            category?: components["schemas"]["AICategoryEnum"] | null;
            /**
             * Version
             * @description 모델 버전
             */
            version?: string | null;
            /** @description 모델 상태 */
            status?: components["schemas"]["ModelStatusEnum"] | null;
            /**
             * Max Tokens
             * @description 최대 토큰 수
             */
            max_tokens?: number | null;
            /**
             * Max Input Tokens
             * @description 최대 입력 토큰 수
             */
            max_input_tokens?: number | null;
            /**
             * Max Output Tokens
             * @description 최대 출력 토큰 수
             */
            max_output_tokens?: number | null;
            /**
             * Input Cost Per Token
             * @description 입력 토큰당 비용
             */
            input_cost_per_token?: number | null;
            /**
             * Output Cost Per Token
             * @description 출력 토큰당 비용
             */
            output_cost_per_token?: number | null;
        } & {
            [key: string]: unknown;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * ModelServingStatusDTO
         * @description 모델 서빙 상태 DTO
         */
        ModelServingStatusDTO: {
            /**
             * Model Id
             * @description 모델 ID
             */
            model_id: number;
            /**
             * User Model Id
             * @description 사용자 모델 설정 ID
             */
            user_model_id?: number | null;
            /**
             * Model Name
             * @description 모델 이름
             */
            model_name: string;
            /**
             * Model Version
             * @description 모델 버전
             */
            model_version: string;
            /** @description 배포 타입 */
            deployment_type: components["schemas"]["DeploymentType"];
            /**
             * Container Status
             * @description 컨테이너 상태
             */
            container_status: string;
            /**
             * Api Url
             * @description API URL
             */
            api_url?: string | null;
            /**
             * Host Port
             * @description 호스트 포트
             */
            host_port?: number | null;
            /**
             * Last Active
             * @description 마지막 활성 시간
             */
            last_active?: string | null;
        };
        /**
         * ModelStatusEnum
         * @enum {string}
         */
        ModelStatusEnum: "ALPHA" | "BETA" | "STABLE" | "DEPRECATED";
        /** PaginatedResponseDTO[CommentResponseDTO] */
        PaginatedResponseDTO_CommentResponseDTO_: {
            /**
             * Items
             * @description 페이지 데이터
             */
            items: components["schemas"]["CommentResponseDTO"][];
            /**
             * Total
             * @description 총 데이터 수
             */
            total: number;
            /**
             * Page
             * @description 현재 페이지 번호
             */
            page: number;
            /**
             * Size
             * @description 페이지 크기
             */
            size: number;
            /**
             * Total Pages
             * @description 총 페이지 수
             */
            total_pages: number;
        };
        /** PaginatedResponseDTO[GenAIResponseDTO] */
        PaginatedResponseDTO_GenAIResponseDTO_: {
            /**
             * Items
             * @description 페이지 데이터
             */
            items: components["schemas"]["GenAIResponseDTO"][];
            /**
             * Total
             * @description 총 데이터 수
             */
            total: number;
            /**
             * Page
             * @description 현재 페이지 번호
             */
            page: number;
            /**
             * Size
             * @description 페이지 크기
             */
            size: number;
            /**
             * Total Pages
             * @description 총 페이지 수
             */
            total_pages: number;
        } & {
            [key: string]: unknown;
        };
        /**
         * SortOrderEnum
         * @enum {string}
         */
        SortOrderEnum: "ASC" | "DESC";
        UserLLMConfigDTO: Record<string, never>;
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_model_list_v1_catalog__get: {
        parameters: {
            query?: {
                /** @description 모델 카테고리 */
                category?: components["schemas"]["AICategoryEnum"] | null;
                /** @description 모델 제공자 */
                provider?: string | null;
                /** @description 배포 타입 (PRIVATE_VLLM 또는 PUBLIC_API) */
                deployment_type?: string | null;
                /** @description 페이지 번호 */
                page?: number;
                /** @description 페이지 크기 */
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    create_model_v1_catalog__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GenAICreateDTO"];
            };
        };
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    search_models_v1_catalog_search_get: {
        parameters: {
            query?: {
                /** @description 검색 키워드 */
                keyword?: string | null;
                /** @description 모델 태그 */
                tags?: string[] | null;
                /** @description 사용 사례 */
                use_cases?: string[] | null;
                /** @description 지원 언어 */
                languages?: string[] | null;
                /** @description 산업 분야 */
                industries?: string[] | null;
                /** @description 필요 기능 */
                capabilities?: string[] | null;
                /** @description 최소 평점 */
                min_community_rating?: number | null;
                /** @description 최소 성공률 */
                min_success_rate?: number | null;
                /** @description 모델 카테고리 */
                category?: components["schemas"]["AICategoryEnum"] | null;
                /** @description 모델 제공자 */
                provider?: string | null;
                /** @description 모델 상태 */
                status?: components["schemas"]["ModelStatusEnum"] | null;
                /** @description 정렬 기준 */
                sort_by?: string | null;
                /** @description 정렬 순서 */
                order?: components["schemas"]["SortOrderEnum"];
                /** @description 페이지 번호 */
                page?: number;
                /** @description 페이지 크기 */
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_model_v1_catalog__model_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 조회할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    update_model_v1_catalog__model_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 수정할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GenAIUpdateDTO"];
            };
        };
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    delete_model_v1_catalog__model_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 삭제할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 검색 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_GenAIResponseDTO_"];
                };
            };
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 잘못된 검색 조건 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 모델을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 에러 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_comments_v1_comment_models__model_id__comments_get: {
        parameters: {
            query?: {
                /** @description 페이지 번호 */
                page?: number;
                /** @description 페이지 크기 */
                size?: number;
            };
            header?: never;
            path: {
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedResponseDTO_CommentResponseDTO_"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    create_comment_v1_comment_models__model_id__comments_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                model_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CommentCreateDTO"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CommentResponseDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    delete_comment_v1_comment_comments__comment_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                comment_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_llm_configs_v1_settings_get: {
        parameters: {
            query?: {
                /** @description 사용자 ID (제공되면 해당 사용자의 설정만 반환) */
                user_id?: number | null;
                /** @description 배포 타입 필터 (PUBLIC_API 또는 PRIVATE_VLLM) */
                deployment_type?: components["schemas"]["DeploymentType"] | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>[];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_all_llm_configs_for_model_v1_settings__model_id__all_get: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
            };
            header?: never;
            path: {
                /** @description 조회할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    update_llm_config_v1_settings__model_id__put: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
                /** @description 특정 설정 ID (선택사항) */
                user_model_id?: number | null;
            };
            header?: never;
            path: {
                /** @description 업데이트할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLLMConfigDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    create_llm_config_v1_settings__model_id__post: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
            };
            header?: never;
            path: {
                /** @description 생성할 모델의 ID */
                model_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLLMConfigDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_config_by_id_v1_settings_config__user_model_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 조회할 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    update_config_by_id_v1_settings_config__user_model_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 업데이트할 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserLLMConfigDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    delete_config_by_id_v1_settings_config__user_model_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 삭제할 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    start_model_v1_settings__user_model_id__start_post: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
            };
            header?: never;
            path: {
                /** @description 시작할 모델 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    stop_model_v1_settings__user_model_id__stop_post: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
            };
            header?: never;
            path: {
                /** @description 중지할 모델 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_model_status_v1_settings_status__user_model_id__get: {
        parameters: {
            query: {
                /** @description 사용자 ID */
                user_id: number;
            };
            header?: never;
            path: {
                /** @description 모델 설정 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelServingStatusDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    list_running_models_v1_settings_list_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ModelServingStatusDTO"][];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_user_configs_direct_v1_settings_user__user_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_config_by_id_secure_v1_settings_config_secure__user_model_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 조회할 설정의 ID */
                user_model_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 설정을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_current_user_v1_current_user_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_permissions_v1_current_permissions_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiPermissionListResponseDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    create_permission_v1_current_permissions_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiPermissionCreateDTO"];
            };
        };
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiPermissionResponseDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    get_permission_v1_current_permissions__permission_id__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 조회할 권한의 ID */
                permission_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiPermissionResponseDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    update_permission_v1_current_permissions__permission_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 수정할 권한의 ID */
                permission_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ApiPermissionUpdateDTO"];
            };
        };
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiPermissionResponseDTO"];
                };
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    delete_permission_v1_current_permissions__permission_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 삭제할 권한의 ID */
                permission_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 잘못된 요청 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 인증 필요 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 권한 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 리소스를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
            /** @description 서버 내부 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
